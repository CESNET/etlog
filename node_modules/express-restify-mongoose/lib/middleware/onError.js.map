{"version":3,"sources":["../../src/middleware/onError.js"],"names":[],"mappings":";;AAAA,IAAM,iBAAiB,QAAQ,iBAAR,CAAvB;;AAEA,OAAO,OAAP,GAAiB,UAAU,SAAV,EAAqB;AACpC,SAAO,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACpC,QAAM,gBAAgB,eAAe,GAAf,CAAtB;;AAEA,WAAO,cAAc,KAArB;;AAEA,QAAI,cAAc,MAAlB,EAA0B;AACxB,WAAK,IAAI,GAAT,IAAgB,cAAc,MAA9B,EAAsC;AACpC,eAAO,cAAc,MAAd,CAAqB,GAArB,EAA0B,MAAjC;AACA,eAAO,cAAc,MAAd,CAAqB,GAArB,EAA0B,KAAjC;AACD;AACF;;AAED,QAAI,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;;AAEA,QAAI,SAAJ,EAAe;AACb,UAAI,MAAJ,CAAW,IAAI,GAAJ,CAAQ,UAAnB,EAA+B,IAA/B,CAAoC,aAApC;AACD,KAFD,MAEO;AACL,UAAI,IAAJ,CAAS,IAAI,GAAJ,CAAQ,UAAjB,EAA6B,aAA7B;AACD;AACF,GAnBD;AAoBD,CArBD","file":"onError.js","sourcesContent":["const serializeError = require('serialize-error')\r\n\r\nmodule.exports = function (isExpress) {\r\n  return function (err, req, res, next) {\r\n    const serializedErr = serializeError(err)\r\n\r\n    delete serializedErr.stack\r\n\r\n    if (serializedErr.errors) {\r\n      for (let key in serializedErr.errors) {\r\n        delete serializedErr.errors[key].reason\r\n        delete serializedErr.errors[key].stack\r\n      }\r\n    }\r\n\r\n    res.setHeader('Content-Type', 'application/json')\r\n\r\n    if (isExpress) {\r\n      res.status(req.erm.statusCode).send(serializedErr)\r\n    } else {\r\n      res.send(req.erm.statusCode, serializedErr)\r\n    }\r\n  }\r\n}\r\n"]}